To cryptanalyze CMEA using know plaintext attack, we spilt the it in two phases. 
1.	Phase one:  To determine correct value of T (0)
2.	Phase two:  Backtracking and Meet-in-the-Middle

Phase one - Finding T (0):According to key scheduling scheme, the value of T (0) has to be in cave table. Even though, the cave table has 256 values, the distinct values count to 164. We guess a value called ‘t0’ from these possible 164 values as T (0). By analyzing the known plaintext and ciphertext, we validate this guess.When a T (0) value is guessed, we construct a 256 x 256 matrix of possible values for entries in T-box (16 x 16). Each row number corresponds to entry in T-box and each column number is possible value for these entries. We fill this matrix with 1s for possible values and 0s for rejected values. If we have any row with all 0s, the guessed value for T (0) is incorrect and we move on to next guess.Hence, in order to discard incorrect guesses, we have to mark 0s in the initial matrix. We do that by guessing a T-box entry i.e. ‘guess’ for (P[0] + T (0)) ^ 1. This guessed value should hold true for equations derived in next few lines.The CMEA encryption has 3 parts, of which first and third part is non-linear and second part is linear. We are denoting intermediate results of first part as p’ and second part as p’’ for each plaintext block.1.	p0' = p0 + t02.	p1’ = p1 + T(p0' ^ 1)3.	p2' = p2 + T((p0' + p1 + T(p0' ^ 1)) ^ 2)4.	p0’’ = p0' ^ (p2' | 1)5.	c0 = p0'' - t06.	c1 = p1' - T(p0'' ^ 1)7.	c2 = p2' - T((p0'' + p1') ^ 2)
